"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.registerFastifyLoggingHooks = exports.createFastifyLogger = void 0;
const request_context_1 = require("@fastify/request-context");
const logger_1 = require("./logger");
const defaultFastifyRedactions = [
    'req.headers.authorization',
    'req.headers.cookie',
    'res.headers["set-cookie"]',
    'requestBody.email',
    'responseBody.email',
    'responseBody.data.email',
    'responseBody.data[*].email',
    'responseBody.data.serviceAccess',
];
function createFastifyLogger(options, outputStream) {
    return (0, logger_1.createLogger)({ redactions: defaultFastifyRedactions, ...options }, outputStream);
}
exports.createFastifyLogger = createFastifyLogger;
function registerFastifyLoggingHooks(app) {
    app
        .register(request_context_1.fastifyRequestContextPlugin, {
        hook: 'onRequest',
    })
        .addHook('onRequest', (req, reply, next) => {
        req.requestContext.set('requestId', req.id);
        next();
    })
        .addHook('preHandler', function (req, reply, next) {
        // log the request payload
        if (req.body) {
            req.log.info({ requestBody: req.body }, 'request body');
        }
        next();
    })
        .addHook('preSerialization', (_request, reply, payload, next) => {
        // add a non-serialised version of the response payload to the reply chain
        if (payload) {
            Object.assign(reply, { preSerialisedPayload: payload });
        }
        next();
    })
        .addHook('onSend', function (req, reply, payload, next) {
        const responseContentType = reply.getHeader('content-type');
        if (responseContentType?.includes('application/json')) {
            // log out the response payload
            const responseBody = reply.preSerialisedPayload || payload;
            if (responseBody) {
                req.log.info({ responseBody }, 'response body');
            }
        }
        // return the request id in the headers
        reply.header('x-request-id', req.id);
        next();
    });
}
exports.registerFastifyLoggingHooks = registerFastifyLoggingHooks;
//# sourceMappingURL=fastify.js.map