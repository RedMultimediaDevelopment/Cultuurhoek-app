"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const stream_buffers_1 = require("stream-buffers");
const logger_1 = require("./logger");
const poll_logger_1 = __importDefault(require("./poll-logger"));
describe('stackdriver formatting', () => {
    it('removes the "time" field', async () => {
        const stream = new stream_buffers_1.WritableStreamBuffer();
        const logger = (0, logger_1.createLogger)({ level: 'info' }, stream);
        logger.info('hello world');
        const output = await (0, poll_logger_1.default)(stream);
        expect(output?.[0].severity).toEqual('INFO');
        expect(output?.[0].message).toEqual('hello world');
        expect(output?.[0].time).not.toBeDefined();
    });
    it('adds request fields as labels', async () => {
        const stream = new stream_buffers_1.WritableStreamBuffer();
        const logger = (0, logger_1.createLogger)({ level: 'info' }, stream);
        logger.info('hello world');
        const output = await (0, poll_logger_1.default)(stream);
        expect(output?.[0].severity).toEqual('INFO');
        expect(output?.[0].message).toEqual('hello world');
        expect(output?.[0].time).not.toBeDefined();
    });
});
//# sourceMappingURL=stack-driver.test.js.map