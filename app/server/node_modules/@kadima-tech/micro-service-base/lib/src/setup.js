"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createMicroService = exports.setupApp = void 0;
const path_1 = __importDefault(require("path"));
const fastify_1 = __importDefault(require("fastify"));
const micro_logging_1 = require("@kadima-tech/micro-logging");
const cookie_1 = __importDefault(require("@fastify/cookie"));
const uuid_1 = require("uuid");
const service_1 = require("./plugins/service");
const controller_1 = require("./info/controller");
const setupApp = async (app, config) => {
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    const pkg = require(path_1.default.join(process.cwd(), "package.json"));
    config.description = config.description || pkg.description;
    config.title = config.title || pkg.title;
    config.version = config.version || process.env.VERSION || pkg.version;
    app.register((0, service_1.setupServicePlugin)(config));
    // Setup Info endpoint
    app.get("/info", { logLevel: "error" }, controller_1.infoController);
    return Number(process.env.PORT || 4000);
};
exports.setupApp = setupApp;
const createMicroService = async (microServiceConfig) => {
    const app = (0, fastify_1.default)({
        ignoreTrailingSlash: true,
        logger: micro_logging_1.fastifyLogger,
        ajv: {
            customOptions: {
                coerceTypes: "array",
                strictSchema: false,
            },
        },
        genReqId: (_req) => (0, uuid_1.v4)(),
        requestIdHeader: "x-request-id",
        requestIdLogLabel: "reqId",
    });
    (0, micro_logging_1.registerFastifyLoggingHooks)(app);
    app.register(cookie_1.default);
    const port = await (0, exports.setupApp)(app, microServiceConfig);
    return {
        fastify: app,
        port,
    };
};
exports.createMicroService = createMicroService;
//# sourceMappingURL=setup.js.map